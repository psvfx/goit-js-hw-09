{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAKwD,SAA/CC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCC,YAAW,WACTJ,EAAQ,CAAEH,WAAUC,S,GACnBA,GAEHM,YAAW,WACTH,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IAMgB,IAAnBO,EAASC,SAASC,cAAc,SAGsDF,EAArFG,iBAAiB,UAAU,SAAUC,GAEhBA,EAApBC,iBAwBmH,IArB9F,IAArBC,EAAaN,EAAOO,SAASd,MAC7Be,EAAYR,EAAOO,SAASE,KAC5BC,EAAcV,EAAOO,SAASI,OAG9BC,EAAaC,SAASP,EAAWQ,OACjCL,EAAOI,SAASL,EAAUM,OAC1BH,EAASE,SAASH,EAAYI,OAc3BC,EAAI,EAAGA,EAAIJ,EAAQI,GAAK,EAC/BxB,EAAcwB,EAAGH,EAAaH,EAAOM,GAClCC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAuCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAMrDO,EAAOwB,O","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n// Підключення бібліотеки для неблокуючих сповіщень на стороні клієнта:\nimport Notiflix from 'notiflix';\n\n//Функція повернення нового промісу випадковим чином із затримкою:\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n\n// Отримання посилання до форми:\nconst formEl = document.querySelector('.form');\n\n// Прослуховування події відправки форми та виклику функції-обробника події, яка перевіряє введені дані форми:\nformEl.addEventListener('submit', function (event) {\n  // Скидання дефолтної поведінки\n  event.preventDefault();\n\n  // Зчитування значень полів форми:\n  const delayInput = formEl.elements.delay;\n  const stepInput = formEl.elements.step;\n  const amountInput = formEl.elements.amount;\n\n  // Перетворення на числа значень полів форми:\n  const firstDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  // // Цикл створення зазначеної кількості промісів з відповідними затримками та виводами повідомлень у консоль виконання методів then або catch:\n  // for (let i = 0; i < amount; i += 1) {\n  //   createPromise(i, firstDelay + step * i)\n  //     .then(({ position, delay }) => {\n  //       console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //     })\n  //     .catch(({ position, delay }) => {\n  //       console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  //     });\n  // }\n\n  // Цикл створення зазначеної кількості промісів з відповідними затримками та виводами повідомлень користувачеві, використовуючи бібліотеку notiflix:\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i, firstDelay + step * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  // Скидання в формі введених даних:\n  formEl.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","event","preventDefault","delayInput","elements","stepInput","step","amountInput","amount","firstDelay","parseInt","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.74f3ad55.js.map"}